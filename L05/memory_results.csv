Search Value,Linear Search,Binary Search,Fibonacci Search,Notes
1,2329,2339,2289,"Linear search has the lowest runtime while binary search has the lowest memory cost. This is probably due to the fact that the array being searched is relatively small. Hence binary search might no be worth using for lower memory usage"
4,2306,2349,2285,"Binary search has the lowest runtime, while linear search has the lowest memory cost. This may be because binary search can quickly eliminate half of the remaining elements in each iteration, whereas linear search has to search through each element one by one"
22,2326,2305,2364,"Fibonacci search has the lowest runtime, while linear search has the lowest memory cost. Fibonacci search splits the array based on the Fibonacci sequence, which can provide better performance in some cases."
37,2382,2365,2314,"Binary search has the lowest runtime while Fibonacci search has the lowest memory cost. This could be because the of the fibonacci's searching recursively"
22906,2337,2305,2342,"Fibonacci search has the lowest runtime for the search value of 22906, while binary search has the lowest memory cost. Fibonacci search can quickly remove large portions of the array by splitting it into subarrays based on the Fibonacci sequence, and because binary search and fibonacci search have the same time complexity"
53757,2385,2389,2304,"Binary search has the lowest runtime for the search value of 53757, while Fibonacci search has the lowest memory cost. This could be because the array being searched has a relatively uniform distribution of values, so Fibonacci search's strategy of splitting the array based on the Fibonacci sequence may not be as effective"
112591,2362,2292,2345,"linear search has the lowest memory cost, but Fibonacci search has the lowest runtime. This could be because the array being searched is relatively large, so linear search has to search through each element one by one, while Fibonacci search can quickly eliminate large portions of the array"
361940,2283,2402,2312,"Binary search has the lowest memory cost, but linear search has the lowest runtime. This could be because the array being searched is relatively large, but the lowest runtime of linear search was something unexpected"
475713,2294,2283,2408,"Binary search has the lowest runtime and memory cost. This could be because binary search can quickly eliminate half of the remaining elements in each iteration, providing both lower runtime and lower memory usage"
893766,2318,2301,2393,"Fibonacci search has the lowest memory cost for the search value of 893766, while binary search has the lowest runtime. This could be because Fibonacci search can get rid of large portions of the array by splitting it into subarrays based on the Fibonacci sequence, whereas binary search can quickly cut half of the elements in each iteration"
996637,2345,2313,2356,"Linear search has the lowest memory cost but Fibonacci search has the lowest runtime. This could be due to the fact that linear search has to search through each element one by one, while Fibonacci search can cut down large portions of the array by splitting it into subarrays based on the Fibonacci sequence"
996639,2306,2402,2292,"Binary search has the lowest memory cost but Fibonacci search has the lowest runtime. This may be because the array being searched has a relatively uniform distribution of values, making Fibonacci search's strategy of splitting the array based on the Fibonacci sequence less effective"
996652,2387,2392,2402,"Linear search and Fibonacci search have similar runtimes, while binary search has a lower runtime. However, binary search has a higher memory cost compared to the other two searches"
-996652,2389,2383,2408,"Binary search has the lowest runtime, while linear search and Fibonacci search have similar, higher runtimes. Binary search also has the highest memory cost compared to the other two searches"
